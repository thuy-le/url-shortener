import {CreateUrlData, CreateUrl, Url} from "domain/url/Url";
import {MakeUrlGateway, UrlGateway} from "gateway/url/UrlGateway";
import {InvalidArgumentException} from "domain/Exception";


export function MakeUrlCommandSystem(gateway?: UrlGateway) {
    return new UrlCommandSystem(gateway || MakeUrlGateway());
}


class UrlCommandSystem {
    private gateway: UrlGateway;

    constructor(gateway: UrlGateway) {
        this.gateway = gateway;
    }

    public createUrl(data: CreateUrlData): Url { 
        data.link = data.link.replace("http://", "");
        data.link = data.link.replace("https://", "");         
        const link = this.gateway.findByUrl(data.link);
        if (link) {
            link.increase();
            this.gateway.update(link);
            return link;
        }
        const latest = this.gateway.latestElement();
        return this.gateway.create(CreateUrl(data, latest + 1));
    }
}
